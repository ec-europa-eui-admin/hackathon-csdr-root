
## Deploy to AWS DEV environment
deploy-aws-dev:
  cache: {}
  when: manual
  stage: deploy
  allow_failure: true
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_DEV" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan mwp.dev.ecdevops.eu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - source /builds/eui/cc-csdr-root-app/apps/$PRJ/variables
    - cd /builds/eui/cc-csdr-root-app/apps/$PRJ
    - ls
    - unzip $DISTFILE_ZIP_DEV
    - echo 'var OPENID_LOGIN_ENVIRONMENT = "ecdevops-dev";' > ./dist/assets/openid-login-environment.js
    - cat ./dist/assets/openid-login-config.ecdevops-dev.json > ./dist/assets/dynamic-config.prod.json
    - DISTFILE=$DISTFILE_ZIP_DEV
    - rm $DISTFILE_ZIP_DEV
    - zip -q $DISTFILE -r ./dist/*
    - echo '...uploading - ' $DISTFILE_ZIP_DEV
    - curl -k -u uploader:$AWS_USER_PASS -T $DISTFILE_ZIP_DEV  sftp://mwp.dev.ecdevops.eu:/home/uploader/mwp/dist/$DISTFILE_ZIP_DEV
    - ssh uploader@mwp.dev.ecdevops.eu /home/uploader/scripts/deploy_fend.sh
    - "curl -s -X POST --data-urlencode 'payload={\"channel\": \"#csdr-timeline-mwp\", \"username\": \"eUI bot\", \"text\": \"Deploying to AWS DEV - https://mwp.dev.ecdevops.eu/mwp \"}' https://hooks.slack.com/services/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"
  environment:
    name: MWP AWS DEV
    url: https://mwp.dev.ecdevops.eu/mwp


## Deploy to AWS TST environment
deploy-aws-tst:
  cache: {}
  when: manual
  stage: deploy
  allow_failure: true
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_TST" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan mwp.tst.ecdevops.eu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - source /builds/eui/cc-csdr-root-app/apps/$PRJ/variables
    - cd /builds/eui/cc-csdr-root-app/apps/$PRJ
    - ls
    - unzip $DISTFILE_ZIP_TEST
    - echo 'var OPENID_LOGIN_ENVIRONMENT = "ecdevops-tst";' > ./dist/assets/openid-login-environment.js
    - cat ./dist/assets/openid-login-config.ecdevops-tst.json > ./dist/assets/dynamic-config.prod.json
    - DISTFILE=$DISTFILE_ZIP_TEST
    - rm $DISTFILE_ZIP_TEST
    - zip -q $DISTFILE -r ./dist/*
    - echo '...uploading - ' $DISTFILE_ZIP_TEST
    - curl -k -u uploader:$AWS_USER_PASS -T $DISTFILE_ZIP_TEST  sftp://mwp.tst.ecdevops.eu:/home/uploader/mwp/dist/$DISTFILE_ZIP_TEST
    - ssh uploader@mwp.tst.ecdevops.eu /home/uploader/scripts/deploy_fend.sh
    - "curl -s -X POST --data-urlencode 'payload={\"channel\": \"#csdr-timeline-mwp\", \"username\": \"eUI bot\", \"text\": \"Deploying to AWS TST - https://mwp.tst.ecdevops.eu/mwp \"}' https://hooks.slack.com/services/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"
  environment:
    name: MWP AWS TST
    url: https://mwp.tst.ecdevops.eu/mwp

## Deploy to AWS E2E environment
deploy-aws-e2e:
  cache: {}
  when: manual
  stage: deploy
  allow_failure: true
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_E2E" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan mwp.e2e.ecdevops.eu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - source /builds/eui/cc-csdr-root-app/apps/$PRJ/variables
    - cd /builds/eui/cc-csdr-root-app/apps/$PRJ
    - ls
    - unzip $DISTFILE_ZIP_TEST
    - echo 'var OPENID_LOGIN_ENVIRONMENT = "ecdevops-e2e";' > ./dist/assets/openid-login-environment.js
    - cat ./dist/assets/openid-login-config.ecdevops-e2e.json > ./dist/assets/dynamic-config.prod.json
    - DISTFILE=$DISTFILE_ZIP_TEST
    - rm $DISTFILE_ZIP_TEST
    - zip -q $DISTFILE -r ./dist/*
    - echo '...uploading - ' $DISTFILE_ZIP_TEST
    - curl -k -u uploader:$AWS_USER_PASS -T $DISTFILE_ZIP_TEST  sftp://mwp.e2e.ecdevops.eu:/home/uploader/mwp/dist/$DISTFILE_ZIP_TEST
    - ssh uploader@mwp.e2e.ecdevops.eu /home/uploader/scripts/deploy_fend.sh
    - "curl -s -X POST --data-urlencode 'payload={\"channel\": \"#csdr-timeline-mwp\", \"username\": \"eUI bot\", \"text\": \"Deploying to AWS E2E - https://mwp.e2e.ecdevops.eu/mwp \"}' https://hooks.slack.com/services/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"
  environment:
    name: MWP AWS E2E
    url: https://mwp.e2e.ecdevops.eu/mwp
