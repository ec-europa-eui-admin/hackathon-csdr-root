image: webmutation/docker-gitlab-build-sonar

variables:
  BRANCH: "develop"
  PKG: "NONE"
  PRJ: "NONE"
  SLACKCHANNEL: "csdr-timeline"

before_script:
  - npm config set registry https://ecdevops.eu/repository/npm-all/ --silent
  - npm config set //ecdevops.eu/repository/npm-all/${npmtoken} --silent
  - npm config set //ecdevops.eu/repository/npm-opsys/${npmtoken} --silent
  - npm config set //webgate.ec.europa.eu/CITnet/nexus/repository/npm-digit/${npmtoken_citnet} --silent
  - npm config set always-auth true
  - git config --global user.email "DIGIT-EUI-SUPPORT@ec.europa.eu"
  - git config --global user.name "eUI BuildBot"

cache:
 key: ${CI_COMMIT_REF_SLUG}
 paths:
   - node_modules/

stages:
  - build
  - notify

build:
  stage: build
  artifacts:
    when: always
    paths:
    - variables
  script:
    - npm i -g yarn@latest
    # Install CSDR root eUI/tools - lock file is not update, to keep the one default
    - yarn install --no-lockfile
    # Init selected package structure
    - npm run init -- --project $PRJ --pkg $PKG --branch $BRANCH
    # Some packages requires pre-release init execution - create symlinks pointing to there source (for eUI tools f.e.)
    - if [ -f /builds/eui/cc-csdr-root/packages/$PKG/init.js ]; then node /builds/eui/cc-csdr-root/packages/$PKG/init.js; fi;
    # Call the CSDR package release process
    - npm run pkg:release $PKG -- --branch $BRANCH --slackChannel $SLACKCHANNEL --slackEndPoint ${slack_hook} --sonarQubeToken ${sonarqube_token} --nexusUser ${nexus_user} --nexusPassword ${nexus_password} --jiraUser ${jira_user} --jiraPassword ${jira_password} --skipLint

## Notify Build job result (success or failure)
slack-notification:
  cache: {}
  stage: notify
  when: always
  allow_failure: true

  script:
  - GITLAB_HOST_URL=$(echo $CI_PROJECT_URL | awk -F'/' '{ print $1 "//" $3 }')
  - curl -s -o build.log --header "PRIVATE-TOKEN:${gitlab_token}" $GITLAB_HOST_URL'/api/v4/projects/'"$CI_PROJECT_ID"'/jobs/'"$CI_JOB_ID"'/trace'
  - curl -s -F filetype="javascript" -F channels=$SLACKCHANNEL -F title="GitLab TRACE FILE - $PKG ($BRANCH) " -F file=@build.log -F token=${slack_bot_token} https://slack.com/api/files.upload
