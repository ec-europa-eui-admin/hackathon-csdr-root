image: webmutation/docker-gitlab-build-sonar

variables:
  BRANCH: "develop"
  PKG: "git-commit-test"
  PRJ: "my-workplace"
  SLACKCHANNEL: "csdr-timeline"

before_script:
#   - npm config set registry https://ecdevops.eu/repository/npm-all/ --silent
#   - npm config set //ecdevops.eu/repository/npm-all/${npmtoken} --silent
#   - npm config set //ecdevops.eu/repository/npm-opsys/${npmtoken} --silent
#   - npm config set //webgate.ec.europa.eu/CITnet/nexus/repository/npm-digit/${npmtoken_citnet} --silent
  - npm config set //registry.npmjs.org/${npmtoken_npm} --silent
#   - npm config set //webgate.ec.europa.eu/devops/mvp/nexus/repository/npm-private/${npmtoken_digitc} --silent
  - npm config set always-auth true
  - git config --global user.email "DIGIT-EUI-SUPPORT@ec.europa.eu"
  - git config --global user.name "eUI BuildBot"

cache:
 key: ${CI_COMMIT_REF_SLUG}
 paths:
   - node_modules/

stages:
  - build
  - notify
  - callback

build:
  stage: build
  artifacts:
    when: always
    paths:
    - variables
  script:
    - echo export BUILD_ID=$CI_JOB_ID >> variables
    - npm i -g yarn@latest
    - yarn install --no-lockfile
    - npm run init -- --project $PRJ --pkg $PKG --branch $BRANCH --build
    - if [ -f /builds/eui/cc-csdr-root/packages/$PKG/init.js ]; then node /builds/eui/cc-csdr-root/packages/$PKG/init.js; fi;
    - npm run pkg:release $PKG -- --project $PRJ --branch $BRANCH --slackChannel $SLACKCHANNEL --slackEndPoint ${slack_hook} --sonarQubeToken ${sonarqube_token} --nexusUser ${nexus_user} --nexusPassword ${nexus_password} --jiraUser ${jira_user} --jiraPassword ${jira_password}
    - if [ -f /builds/eui/cc-csdr-root/packages/$PKG/.version.properties ]; then ls -l /builds/eui/cc-csdr-root/packages/$PKG; PKG_VER=`cat /builds/eui/cc-csdr-root/packages/$PKG/.version.properties`; fi;
    - echo export PKG_VERSION=$PKG_VER >> variables
    - echo export PKG_NAME=$PKG >> variables

## Notify Build job result (success or failure)
slack-notification:
  cache: {}
  stage: notify
  when: always
  allow_failure: true

  script:
  - if [ -f variables ]; then source variables; fi;
  - echo $BUILD_ID
  - GITLAB_HOST_URL=$(echo $CI_PROJECT_URL | awk -F'/' '{ print $1 "//" $3 }')
  - curl -s -o build.log --header "PRIVATE-TOKEN:${gitlab_token}" $GITLAB_HOST_URL'/api/v4/projects/'"$CI_PROJECT_ID"'/jobs/'"$BUILD_ID"'/trace'
  - curl -s -F filetype="javascript" -F channels=$SLACKCHANNEL -F title="GitLab TRACE FILE - $PKG ($BRANCH) " -F file=@build.log -F token=${slack_bot_token} https://slack.com/api/files.upload

# call-bamboo:
#   cache: {}
#   stage: callback
#   allow_failure: true
#   when: always
#   script:
#     - echo $BAMBOOBUILDNUM
#     - if [ -f variables ]; then source variables; fi;
#     - echo $BUILD_ID
#     - GITLAB_HOST_URL=$(echo $CI_PROJECT_URL | awk -F'/' '{ print $1 "//" $3 }')
#     - echo $PKG_VERSION; curl -k -u ${bambootoken} -H "Content-Type:application/json" -X PUT "https://webgate.ec.europa.eu/CITnet/bamboo/rest/api/latest/queue/$BAMBOOBUILDNUM?stage=Deploy&executeAllStages=true&bamboo.variable.PKG_VERSION=$PKG_VERSION&bamboo.variable.PKG_NAME=$PKG_NAME&bamboo.variable.GL_BUILD_ID=$BUILD_ID"
