image: webmutation/docker-gitlab-build-sonar

variables:
  PRJ: api-manager
  ENV_TARGET: DEV
  BUILD_APP: ""
  BUILD_PKG: ""

stages:
  - build
  - notify
  - deploy

before_script:
  - npm config set registry https://registry.npmjs.org/ --silent
  - npm config set //registry.npmjs.org/${npmtoken_npm} --silent
  - npm config set cache /builds/eui/build_remote/cache  --global
  - npm config set always-auth true
  - git config --global user.email "ec.europa.eui@gmail.com"
  - git config --global user.name "ec-europa-eui"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

build-app:
  stage: build
  only:
    variables:
    - $BUILD_APP != ""
  artifacts:
    when: always
    paths:
    - /builds/eui/cc-csdr-root-app/apps/$PRJ/*.zip
    - /builds/eui/cc-csdr-root-app/apps/$PRJ/variables
    - BUILDJOB.ID
  script:
    - echo $CI_JOB_ID >> BUILDJOB.ID
    - npm install yarn@latest -g
    - yarn --no-lockfile
    - npm run init -- --project $PRJ --containerOnly --build
    - npm run app:release $PRJ -- --envTarget $ENV_TARGET --slackChannel ${slack_channels} --slackEndPoint ${slack_hook}
    - cd /builds/eui/cc-csdr-root-app/apps/$PRJ
    ## RAW ARTIFACT
    - DISTFILE_RAW=$PRJ-ui-raw-`date +%Y-%m-%d_%s`.zip
    - zip -q $DISTFILE_RAW -r ./dist/*
    - echo export DISTFILE_ZIP_RAW=$DISTFILE_RAW >> variables

build-pkg:
  stage: build
  only:
    variables:
    - $BUILD_PKG != ""
  artifacts:
    when: always
    paths:
    - variables
  script:
    - echo export BUILD_ID=$CI_JOB_ID >> variables
    - npm i -g yarn@latest
    - yarn install --no-lockfile
    - npm run init -- --project $PRJ --pkg $PKG --branch $BRANCH --build
    - if [ -f /builds/eui/cc-csdr-root/packages/$PKG/init.js ]; then node /builds/eui/cc-csdr-root/packages/$PKG/init.js; fi;
    - npm run pkg:release $PKG -- --project $PRJ --branch $BRANCH --slackChannel $SLACKCHANNEL --slackEndPoint ${slack_hook} --sonarQubeToken ${sonarqube_token} --nexusUser ${nexus_user} --nexusPassword ${nexus_password} --jiraUser ${jira_user} --jiraPassword ${jira_password}
    - if [ -f /builds/eui/cc-csdr-root/packages/$PKG/.version.properties ]; then ls -l /builds/eui/cc-csdr-root/packages/$PKG; PKG_VER=`cat /builds/eui/cc-csdr-root/packages/$PKG/.version.properties`; fi;
    - echo export PKG_VERSION=$PKG_VER >> variables
    - echo export PKG_NAME=$PKG >> variables

## Notify Build job result (success or failure)
slack-notification:
  cache: {}
  stage: notify
  allow_failure: true
  when: always
  script:
    - BUILD_ID=$( cat BUILDJOB.ID )
    - GITLAB_HOST_URL=$(echo $CI_PROJECT_URL | awk -F'/' '{ print $1 "//" $3 }')
    - curl -s -o build.log --header "PRIVATE-TOKEN:${gitlab_token}" $GITLAB_HOST_URL'/api/v4/projects/'"$CI_PROJECT_ID"'/jobs/'"$BUILD_ID"'/trace'
    - curl -s -F filetype="javascript" -F channels="csdr-timeline-mwp" -F title="GitLab TRACE FILE - $BAMBOOBUILDNUM " -F file=@build.log -F token=${slack_bot_token} https://slack.com/api/files.upload

## Deploy to AWS Hackthon environment
deploy-aws-hackathon:
  cache: {}
  when: manual
  stage: deploy
  allow_failure: true
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan hackathon.ecdevops.eu >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - source /builds/eui/cc-csdr-root-app/apps/$PRJ/variables
    - cd /builds/eui/cc-csdr-root-app/apps/$PRJ
    - echo '...uploading - ' $DISTFILE_ZIP_RAW
    - scp $DISTFILE_ZIP_RAW uploader@hackathon.ecdevops.eu:/home/uploader/hackathon
    - ssh uploader@hackathon.ecdevops.eu /home/uploader/deploy_hackathon.sh
    #- "curl -s -X POST --data-urlencode 'payload={\"channel\": \"#csdr-timeline-mwp\", \"username\": \"eUI bot\", \"text\": \"Deploying to HACKATHON - https://hackathon.ecdevops.eu/ \"}' https://hooks.slack.com/services/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"
  environment:
    name: AWS Hackathon
    url: https://hackathon.ecdevops.eu/
